#==== Program Hello World ====# 
Cara membuat kode
lewat html langsung, hello-world.html
lewat import dengan tag source dan atribut src, hello-world-file.html


#==== Komentar ====#
adalah kode program yang tidak akan dieksekusi, hello-world.html


#==== Tipe Data Number ====#
js hanya mendukung satu tipe data number yaitu number
bilangan bulat dan pecahan adalah number
number notation di js default nya desimal (basis 10), selain itu
hexadecimal 0x(angak hexadecimal)
binary 0b(angka biner)
octal 0o(angka oktal)


#==== Tipe Data Boolean ====#
tipe data kebenaran, hanya bernilai true atau false


#==== Tipe Data String ====#
tipe data text, dibuat dengan diapit petik satu atau ganda
"data" atau 'data'

menggabungkan string, dengan + (concating)
"nama depan" + "nama tengah" + "nama belakang"

escape squence, karakter khusus seperti
enter (\n), tab (\t), petik satu atau ganda, backslash dll
praktik dengan textarea agar enter terlihat

#==== Variable ====#
tempat untuk menyimpan data, sebenarnya hanya menyimpan lokasi data di memory
data dapat digunakan lagi
sebelum tahun 2015 membuat variable dengan keyword var
setelahnya diperkenalkan let dan const (untuk constanta), karena terdapat masalah dengan var
jika dirubah maka error
jika terdapat error kode dibawahnya tidak akan dieksekusi

#==== Operator Matematika ====#
banyak operator Matematika yang didukung seperti: aritmatika, argumented assignments, unary, dll


#==== Operator Perbandingan ====#
oprasi untuk membandingkan dua buah data dan menghasilkan nilai Boolean
jika hasil oprasinya benar maka menghasilkan true
jika salah maka false


#==== Operator Logika ====#
ini adalah operator untuk dua data Boolean,
logika dasar seperti and, or, xor
contoh true and false menghasilkan false


#==== Console ====#
js memiliki fitur untuk logging, dengan mencetak di Console
untuk melakukan ini dengan console dan Method-method nya
berikut urutan level nya
console.debug (untuk debug)
console.log / info (untuk info)
console.table (mencetak table)
console.warn (warning)
console.error (error)

secara default yang tampil hanya level log dan setelahnya (debug tidak muncul)
untuk memunculkan nya ubah level di console


#==== String Template ====#
menggunakan operator + untuk concating string yang banyak sangatlah berbelit-berbelit
dengan string template kita bisa mensubtitusi data dari luar string tanpa keluar dari string
atau bahkan melakukan oprasi Matematika
untuk menggunakan string template dengan backtic `data`
selain itu ini juga bisa untuk multiline string (bermasalah)


#==== Konversi String dan Number ====#
parseInt atau parseFloat mentolelir kesalahan di belakang
    parseInt("1salah") => 1
Number tidak mentolelir kesalahan apapun
    Numconditionber("1salah") => NaN

float dibulatkan ke bawah jika menjadi parseInt
NaN ada singaktan dari Not a Number atau angka unik yang menyatakan ini bukan angka
NaN akibat kesalahan parsing atau oprasi dengan NaN


#==== Tipe Data Array ====#
kumpulan tipe data, di JS ini dinamis (ukuran bisa bertambah) dan tipe bebas
menambah di akhir dengan push()
mengambil spesifik dengan index, data[0]
menghapus dengan delete data[0], tidak menggeser (index juga akan hilang bersama data)
namun array length tetap sama meskipun di delete (kelak index bisa di buat lagi)


#==== Tipe Data Object ====#
di bahasa lain index bisa menggunakan tipe selain number (array asosiatif php), namun di js tidak bisa
jika array diberikan index selain number, maka di ubah menjadi objek
ini berbahaya karena oprasi array dan objek berbeda
objek mirip array tapi index nya juga bisa string
const objek {
    attribute: property
}   


#==== If Expression ====#
salah satu kata kunci percabangan



#==== Popup ====#
js memiliki fitur bernama alert, prompt dan confirm
digunakan untuk memberi peringatan berupa popup di browser
alert memberi peringatan
prompt meminta input string
confirm meminta input boolean


#==== Undefined ====#
adalah kata kunci, sebuah tipe data yang belum terdefinisikan
seperti variable yang belum ditambahkan nilai
array yang tidak ada di index
objek yang property nya tidak ada


#==== Null ====#
null adalah data yang kosong, sudah didefinisikan tapi kosong
itu adalah sebuah tempat kosong di memory yang selamanya kosong


#==== Switch Expression ====#
percabangan yang lebih sederhana
hanya untuk ==
hanya untuk satu variable / data


#==== Operator typeof ====#
operator untuk mengetahui tipe data sebuah value atau variable
typeof a // me return string tipe data dari a


#==== Operator in ====#
operator untuk mengecek sebuah property ada di objek atau tidak
bisa juga sebuah index ada di array atau tidak
me return boolean, true jika ada
"a" in namaObjek
0 in namaArray
walapun tipe datanya null atau undefined akan tetap mengembalikan true
lebih tepatnya didefinisikan sebagai null / undefined


#==== Ternary Operator ====#
operator sederhana dari if statement
mengambil nilai kiri jika benar, kanan jika salah
boolean ? nilaikiri : nilaikanan


#==== Nullish Coalescing Operator ====#
nullish value adalah null dan undefined
nullish coalescing operator ?? mirip dengan Ternary
true jika mendapatkan nullish value
nilai string kosong bukan nullish


#==== Optional Chaining ====#




#==== Falsy dan Truthy ====#



#==== Operator Logika di Non Boolean ====#



#==== For Loop ====#



#==== While Loop ====#



#==== Do While Loop ====#



#==== Break dan Continue ====#



#==== Label ====#



#==== For In ====#



#==== For Of ====#



#==== With Statement ====#



#==== Function ====#



#==== Function Parameter ====#



#==== Function Return Value ====#



#==== Optional Parameter ====#



#==== Default Parameter ====#



#==== Rest Parameter ====#



#==== Function Sebagai Value ====#



#==== Anonymous Function ====#



#==== Function dalam Function ====#



#==== Scope ====#



#==== Recursive Function ====#



#==== Function GEnerator ====#



#==== Arrow Function ====#



#==== Closure ====#



#==== Object Method ====#



#==== Kata Kunci this ====#



#==== Arrow Function di Object ====#



#==== Getter dan Setter ====#



#==== Masalah Variable var ====#



#==== Destructuring ====#



#==== Strict Mode ====#



#==== Debugger ====#




security & security hotsopts